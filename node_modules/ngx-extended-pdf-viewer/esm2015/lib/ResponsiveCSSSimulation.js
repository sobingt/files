/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @return {?}
 */
function rtl() {
    /** @type {?} */
    let element = (/** @type {?} */ (document.getElementsByClassName('toolbar')[0]));
    while (element) {
        if (element.dir !== '') {
            return element.dir === 'rtl';
        }
        if (!element.parentElement) {
            break;
        }
        element = element.parentElement;
    }
    return false;
}
/**
 * @param {?} width
 * @return {?}
 */
export function resizeUpTo535px(width) {
    /** @type {?} */
    const tinyElement = document.getElementById('scaleSelectContainer');
    /** @type {?} */
    const tiny = (/** @type {?} */ (tinyElement));
    if (width < 535) {
        // not perfect, but good first approximation
        tiny.classList.add('hidden');
    }
    else {
        tiny.classList.remove('hidden');
    }
}
/**
 * @param {?} container
 * @param {?} width
 * @return {?}
 */
export function resizeUpTo640px(container, width) {
    /** @type {?} */
    const smallElements = container.getElementsByClassName('hiddenSmallView');
    for (let i = 0; i < smallElements.length; i++) {
        /** @type {?} */
        const elt = (/** @type {?} */ (smallElements[i]));
        if (width < 640) {
            elt.classList.add('hidden');
        }
        else {
            elt.classList.remove('hidden');
        }
    }
    /** @type {?} */
    const visibleSmallViewElements = container.getElementsByClassName('visibleSmallView');
    for (let i = 0; i < visibleSmallViewElements.length; i++) {
        /** @type {?} */
        const elt = (/** @type {?} */ (visibleSmallViewElements[i]));
        if (width < 640) {
            elt.classList.remove('hidden');
        }
        else {
            elt.classList.add('hidden');
        }
    }
    /** @type {?} */
    const toolbarButtonSpacer = container.getElementsByClassName('toolbarButtonSpacer');
    for (let i = 0; i < toolbarButtonSpacer.length; i++) {
        /** @type {?} */
        const elt = (/** @type {?} */ (toolbarButtonSpacer[i]));
        if (width < 640) {
            elt.classList.add('below640px');
        }
        else {
            elt.classList.remove('below640px');
        }
    }
    /** @type {?} */
    const findbar = document.getElementsByClassName('findbar');
    for (let i = 0; i < findbar.length; i++) {
        /** @type {?} */
        const elt = (/** @type {?} */ (findbar[i]));
        if (width < 640) {
            elt.classList.add('below640px');
        }
        else {
            elt.classList.remove('below640px');
        }
    }
}
/**
 * @param {?} container
 * @param {?} width
 * @return {?}
 */
export function resizeUpTo700px(container, width) {
    /** @type {?} */
    const mediumElements = container.getElementsByClassName('hiddenMediumView');
    for (let i = 0; i < mediumElements.length; i++) {
        /** @type {?} */
        const elt = (/** @type {?} */ (mediumElements[i]));
        if (width < 700) {
            elt.classList.add('hidden');
        }
        else {
            elt.classList.remove('hidden');
        }
    }
    // #103
    /** @type {?} */
    const visibleMediumElements = container.getElementsByClassName('visibleMediumView');
    for (let i = 0; i < visibleMediumElements.length; i++) {
        /** @type {?} */
        const elt = (/** @type {?} */ (visibleMediumElements[i]));
        if (width < 700) {
            elt.classList.remove('hidden');
        }
        else {
            elt.classList.add('hidden');
        }
    }
}
/**
 * @param {?} width
 * @return {?}
 */
export function resizeUpTo900px(width) {
    /** @type {?} */
    const elt = document.getElementById('toolbarViewerMiddle');
    if (elt) {
        if (width < 900) {
            elt.classList.add('toolbarViewerMiddleBelow900px');
        }
        else {
            elt.classList.remove('toolbarViewerMiddleBelow900px');
        }
    }
}
/**
 * @param {?} width
 * @return {?}
 */
export function resizeUpTo840px(width) {
    /** @type {?} */
    const elt = document.getElementsByClassName('zoom')[0];
    if (elt) {
        if (width < 840) {
            elt.classList.add('below840px');
        }
        else {
            elt.classList.remove('below840px');
        }
    }
}
/**
 * @param {?} container
 * @param {?} width
 * @return {?}
 */
export function resizeUpTo770px(container, width) {
    /** @type {?} */
    let elt = document.getElementsByClassName('zoom')[0];
    if (elt) {
        if (width < 770) {
            elt.classList.add('below770px');
        }
        else {
            elt.classList.remove('below770px');
        }
    }
    /** @type {?} */
    const hiddenLargeElements = container.getElementsByClassName('hiddenLargeView');
    for (let i = 0; i < hiddenLargeElements.length; i++) {
        elt = (/** @type {?} */ (hiddenLargeElements[i]));
        if (width < 770) {
            elt.classList.add('hidden');
        }
        else {
            elt.classList.remove('hidden');
        }
    }
    /** @type {?} */
    const visibleLargeElements = container.getElementsByClassName('visibleLargeView');
    for (let i = 0; i < visibleLargeElements.length; i++) {
        elt = (/** @type {?} */ (visibleLargeElements[i]));
        if (width < 770) {
            elt.classList.remove('hidden');
        }
        else {
            elt.classList.add('hidden');
        }
    }
}
/**
 * @return {?}
 */
export function removeDynamicCSS() {
    /** @type {?} */
    const classesToRemove = ['toolbarViewerMiddleBelow900px', 'below840px', 'below770px', 'below700px', 'below640px'];
    /** @type {?} */
    const elt = document.getElementsByClassName('zoom')[0];
    if (elt) {
        classesToRemove.forEach((/**
         * @param {?} c
         * @return {?}
         */
        c => {
            /** @type {?} */
            const parents = elt.getElementsByClassName(c);
            if (parents) {
                for (let i = 0; i < parents.length; i++) {
                    /** @type {?} */
                    const element = parents.item(i);
                    if (element) {
                        element.classList.remove(c);
                    }
                }
            }
        }));
        /** @type {?} */
        const tinyElement = document.getElementById('scaleSelectContainer');
        if (tinyElement) {
            tinyElement.classList.remove('hidden');
        }
        /** @type {?} */
        const classesToRemoveHiddenFrom = [
            'hiddenSmallView',
            'visibleSmallView',
            'hiddenMediumView',
            'visibleMediumView',
            'hiddenLargeView',
            'visibleLargeView'
        ];
        classesToRemoveHiddenFrom.forEach((/**
         * @param {?} c
         * @return {?}
         */
        c => {
            /** @type {?} */
            const parents = elt.getElementsByClassName(c);
            if (parents) {
                for (let i = 0; i < parents.length; i++) {
                    /** @type {?} */
                    const element = parents.item(i);
                    if (element) {
                        element.classList.remove('hidden');
                    }
                }
            }
        }));
    }
}
//# sourceMappingURL=data:application/json;base64,