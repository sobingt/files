{"remainingRequest":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/modules/popup/classes/popup-template-controller.js","dependencies":[{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/modules/popup/classes/popup-template-controller.js","mtime":1596454950000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/cache-loader/dist/cjs.js","mtime":1596454942000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1596454940000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { TemplateRef } from \"@angular/core\";\nimport { SuiPopupController } from \"./popup-controller\";\nimport { PopupConfig } from \"./popup-config\";\nvar templateRef = TemplateRef;\nvar TemplatePopupConfig = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TemplatePopupConfig, _super);\n    function TemplatePopupConfig() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TemplatePopupConfig;\n}(PopupConfig));\nexport { TemplatePopupConfig };\nvar SuiPopupTemplateController = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(SuiPopupTemplateController, _super);\n    function SuiPopupTemplateController(renderer, element, componentFactory, config) {\n        return _super.call(this, renderer, element, componentFactory, config) || this;\n    }\n    SuiPopupTemplateController.prototype.configure = function (config) {\n        _super.prototype.configure.call(this, config);\n        if (config) {\n            this.template = config.template;\n            this.context = config.context;\n        }\n    };\n    SuiPopupTemplateController.prototype.open = function () {\n        // If there is a template, inject it into the view.\n        if (this.template) {\n            this.popup.templateSibling.clear();\n            this._componentFactory.createView(this.popup.templateSibling, this.template, {\n                $implicit: this.popup,\n                context: this.context\n            });\n        }\n        _super.prototype.open.call(this);\n    };\n    return SuiPopupTemplateController;\n}(SuiPopupController));\nexport { SuiPopupTemplateController };\n//# sourceMappingURL=popup-template-controller.js.map\n",null]}