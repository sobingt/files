{"remainingRequest":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/modules/datepicker/helpers/date-fns.js","dependencies":[{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/modules/datepicker/helpers/date-fns.js","mtime":1596454950000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/cache-loader/dist/cjs.js","mtime":1596454942000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1596454940000}],"contextDependencies":[],"result":["var __assign = (this && this.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nimport { format, parse } from \"date-fns\";\nimport * as defaultLocale from \"date-fns/locale/en-US\";\nfunction buildLocalizeFn(values, defaultType, indexCallback) {\n    return function (dirtyIndex, _a) {\n        var type = (_a === void 0 ? { type: defaultType } : _a).type;\n        var index = indexCallback ? indexCallback(dirtyIndex) : dirtyIndex;\n        return values[type][index];\n    };\n}\nfunction buildLocalizeArrayFn(values, defaultType) {\n    return function (_a) {\n        var type = (_a === void 0 ? { type: defaultType } : _a).type;\n        return values[type];\n    };\n}\nfunction buildMatchFn(patterns, defaultType) {\n    return function (dirtyString, _a) {\n        var type = (_a === void 0 ? { type: defaultType } : _a).type;\n        return dirtyString.match(\"^(\" + patterns[type].join(\"|\") + \")\");\n    };\n}\nfunction buildParseFn(patterns, defaultType) {\n    return function (_a, _b) {\n        var result = _a[1];\n        var type = (_b === void 0 ? { type: defaultType } : _b).type;\n        return (patterns[type] || patterns[defaultType])\n            .map(function (p) { return new RegExp(\"^\" + p); })\n            .findIndex(function (pattern) { return pattern.test(result); });\n    };\n}\nvar DateFnsParser = /** @class */ /*@__PURE__*/ (function () {\n    function DateFnsParser(locale) {\n        this._weekStartsOn = locale.firstDayOfWeek;\n        var weekdayValues = {\n            long: locale.weekdays,\n            short: locale.weekdaysShort,\n            narrow: locale.weekdaysNarrow\n        };\n        var monthValues = {\n            long: locale.months,\n            short: locale.monthsShort\n        };\n        var timeOfDayValues = {\n            long: locale.timesOfDay,\n            uppercase: locale.timesOfDayUppercase,\n            lowercase: locale.timesOfDayLowercase\n        };\n        var timeOfDayMatchValues = {\n            long: locale.timesOfDay,\n            short: locale.timesOfDayUppercase.concat(locale.timesOfDayLowercase)\n        };\n        this._locale = defaultLocale;\n        this._locale.localize = __assign({}, this._locale.localize, {\n            weekday: buildLocalizeFn(weekdayValues, \"long\"),\n            weekdays: buildLocalizeArrayFn(weekdayValues, \"long\"),\n            month: buildLocalizeFn(monthValues, \"long\"),\n            months: buildLocalizeArrayFn(monthValues, \"long\"),\n            timeOfDay: buildLocalizeFn(timeOfDayValues, \"long\", function (hours) {\n                return hours / 12 >= 1 ? 1 : 0;\n            }),\n            timesOfDay: buildLocalizeArrayFn(timeOfDayValues, \"long\")\n        });\n        this._locale.match = __assign({}, this._locale.match, {\n            weekdays: buildMatchFn(weekdayValues, \"long\"),\n            weekday: buildParseFn(weekdayValues, \"long\"),\n            months: buildMatchFn(monthValues, \"long\"),\n            month: buildParseFn(monthValues, \"long\"),\n            timesOfDay: buildMatchFn(timeOfDayMatchValues, \"long\"),\n            timeOfDay: buildParseFn(timeOfDayMatchValues, \"long\")\n        });\n    }\n    Object.defineProperty(DateFnsParser.prototype, \"_config\", {\n        get: function () {\n            return {\n                weekStartsOn: this._weekStartsOn,\n                locale: this._locale\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DateFnsParser.prototype.format = function (d, f) {\n        return format(d, f, this._config);\n    };\n    DateFnsParser.prototype.parse = function (dS, f, bD) {\n        return parse(dS, f, bD, this._config);\n    };\n    return DateFnsParser;\n}());\nexport { DateFnsParser };\n//# sourceMappingURL=date-fns.js.map\n",null]}