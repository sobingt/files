{"remainingRequest":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/modules/transition/classes/transition.js","dependencies":[{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/modules/transition/classes/transition.js","mtime":1596454950000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/cache-loader/dist/cjs.js","mtime":1596454942000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1596454940000}],"contextDependencies":[],"result":["// Possible directions for a transition.\n// Possible directions for a transition.\nexport var TransitionDirection = \n// Possible directions for a transition.\n/*@__PURE__*/ (function (TransitionDirection) {\n    TransitionDirection[TransitionDirection[\"In\"] = 0] = \"In\";\n    TransitionDirection[TransitionDirection[\"Out\"] = 1] = \"Out\";\n    TransitionDirection[TransitionDirection[\"Either\"] = 2] = \"Either\";\n    TransitionDirection[TransitionDirection[\"Static\"] = 3] = \"Static\";\n    return TransitionDirection;\n})({});\nvar Transition = /** @class */ /*@__PURE__*/ (function () {\n    function Transition(name, duration, direction, onComplete) {\n        if (duration === void 0) {\n            duration = 250;\n        }\n        if (direction === void 0) {\n            direction = TransitionDirection.Either;\n        }\n        if (onComplete === void 0) {\n            onComplete = function () { };\n        }\n        this.type = name;\n        // We set a minimum duration of 1ms, to give the appearance of an immediate transition\n        // whilst allowing positioning calculations to happen without a visible flicker.\n        this.duration = Math.max(duration, 1);\n        this.direction = direction;\n        this.classes = this.type.split(\" \");\n        this.onComplete = onComplete;\n    }\n    Object.defineProperty(Transition.prototype, \"directionClass\", {\n        // Converts TransitionDirection to class name.\n        get: \n        // Converts TransitionDirection to class name.\n        function () {\n            switch (this.direction) {\n                case TransitionDirection.In: return \"in\";\n                case TransitionDirection.Out: return \"out\";\n            }\n            return \"\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Transition;\n}());\nexport { Transition };\n//# sourceMappingURL=transition.js.map\n",null]}