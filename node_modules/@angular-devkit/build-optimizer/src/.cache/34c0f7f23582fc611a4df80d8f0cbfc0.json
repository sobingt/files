{"remainingRequest":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/misc/util/helpers/util.js","dependencies":[{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/misc/util/helpers/util.js","mtime":1596454950000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/cache-loader/dist/cjs.js","mtime":1596454942000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1596454940000}],"contextDependencies":[],"result":["// Keyboard keycodes.\n// Keyboard keycodes.\nexport var KeyCode = \n// Keyboard keycodes.\n/*@__PURE__*/ (function (KeyCode) {\n    KeyCode[KeyCode[\"Left\"] = 37] = \"Left\";\n    KeyCode[KeyCode[\"Up\"] = 38] = \"Up\";\n    KeyCode[KeyCode[\"Right\"] = 39] = \"Right\";\n    KeyCode[KeyCode[\"Down\"] = 40] = \"Down\";\n    KeyCode[KeyCode[\"Escape\"] = 27] = \"Escape\";\n    KeyCode[KeyCode[\"Enter\"] = 13] = \"Enter\";\n    KeyCode[KeyCode[\"Space\"] = 32] = \"Space\";\n    KeyCode[KeyCode[\"Backspace\"] = 8] = \"Backspace\";\n    return KeyCode;\n})({});\nvar HandledEvent = /** @class */ /*@__PURE__*/ (function () {\n    function HandledEvent() {\n    }\n    return HandledEvent;\n}());\nexport { HandledEvent };\nexport var Util = {\n    Array: {\n        range: function (n, offset) {\n            if (offset === void 0) {\n                offset = 0;\n            }\n            return Array(n).fill(0).map(function (z, i) { return i + offset; });\n        },\n        group: function (items, groupLength) {\n            var mutable = items.slice(0);\n            var groups = [];\n            while (mutable.length > 0) {\n                groups.push(mutable.splice(0, groupLength));\n            }\n            return groups;\n        },\n        groupBy: function (items, field) {\n            return items.reduce(function (groups, i) {\n                var fieldValue = i[field].toString();\n                groups[fieldValue] = groups[fieldValue] || [];\n                groups[fieldValue].push(i);\n                return groups;\n            }, Object());\n        },\n        flatten: function (items) {\n            return items.reduce(function (is, i) { return is.concat(i); }, []);\n        }\n    },\n    String: {\n        padLeft: function (str, length, padding) {\n            var s = str;\n            while (s.length < length) {\n                s = padding + s;\n            }\n            return s;\n        }\n    },\n    DOM: {\n        parseBooleanAttribute: function (attributeValue) {\n            var value = attributeValue;\n            if (typeof attributeValue === \"string\") {\n                value = true;\n            }\n            return value;\n        }\n    },\n    Object: {\n        readValue: function (object, path) {\n            if (!path) {\n                return object;\n            }\n            var recursed;\n            for (var i = 0, p = path.split(\".\"), len = p.length; i < len; i++) {\n                recursed = object[p[i]];\n            }\n            return recursed;\n        }\n    },\n    Math: {\n        round: function (r, n) {\n            return Math.round(r / n) * n;\n        },\n        roundUp: function (r, n) {\n            return Math.ceil(r / n) * n;\n        },\n        roundDown: function (r, n) {\n            return Math.floor(r / n) * n;\n        },\n        mod: function (r, n) {\n            var rem = r % n;\n            if (rem < 0) {\n                return rem + n;\n            }\n            return rem;\n        }\n    }\n};\n//# sourceMappingURL=util.js.map\n",null]}