{"remainingRequest":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/misc/util/services/positioning.service.js","dependencies":[{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/misc/util/services/positioning.service.js","mtime":1596454950000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/cache-loader/dist/cjs.js","mtime":1596454942000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1596454940000}],"contextDependencies":[],"result":["import Popper from \"popper.js\";\nexport var PositioningPlacement = {\n    Auto: \"auto\",\n    TopLeft: \"top left\",\n    Top: \"top\",\n    TopRight: \"top right\",\n    LeftTop: \"left top\",\n    Left: \"left\",\n    LeftBottom: \"left bottom\",\n    BottomLeft: \"bottom left\",\n    Bottom: \"bottom\",\n    BottomRight: \"bottom right\",\n    RightTop: \"right top\",\n    Right: \"right\",\n    RightBottom: \"right bottom\"\n};\nfunction placementToPopper(placement) {\n    if (!placement || placement === PositioningPlacement.Auto) {\n        return \"auto\";\n    }\n    // All placements of the format: `direction alignment`, e.g. `top left`.\n    var _a = placement.split(\" \"), direction = _a[0], alignment = _a[1];\n    // Direction alone covers case of just `top`, `left`, `bottom`, `right`.\n    var chosenPlacement = [direction];\n    // Add `start` / `end` to placement, depending on alignment direction.\n    switch (alignment) {\n        case \"top\":\n        case \"left\":\n            chosenPlacement.push(\"start\");\n            break;\n        case \"bottom\":\n        case \"right\":\n            chosenPlacement.push(\"end\");\n            break;\n    }\n    // Join with hyphen to create Popper compatible placement.\n    return chosenPlacement.join(\"-\");\n}\nfunction popperToPlacement(popper) {\n    if (!popper || popper === \"auto\") {\n        return \"auto\";\n    }\n    var _a = popper.split(\"-\"), direction = _a[0], alignment = _a[1];\n    var chosenPlacement = [direction];\n    switch (direction) {\n        case \"top\":\n        case \"bottom\":\n            switch (alignment) {\n                case \"start\":\n                    chosenPlacement.push(\"left\");\n                    break;\n                case \"end\":\n                    chosenPlacement.push(\"right\");\n                    break;\n            }\n            break;\n        case \"left\":\n        case \"right\":\n            switch (alignment) {\n                case \"start\":\n                    chosenPlacement.push(\"top\");\n                    break;\n                case \"end\":\n                    chosenPlacement.push(\"bottom\");\n                    break;\n            }\n            break;\n    }\n    return chosenPlacement.join(\" \");\n}\nvar PositioningService = /** @class */ /*@__PURE__*/ (function () {\n    function PositioningService(anchor, subject, placement, arrowSelector) {\n        var _this = this;\n        this.anchor = anchor;\n        this.subject = subject;\n        this._placement = placement;\n        var modifiers = {\n            computeStyle: {\n                gpuAcceleration: false\n            },\n            preventOverflow: {\n                escapeWithReference: true,\n                boundariesElement: document.body\n            },\n            arrow: {\n                element: arrowSelector\n            }\n        };\n        if (!arrowSelector) {\n            delete modifiers.arrow;\n        }\n        this._popper = new Popper(anchor.nativeElement, subject.nativeElement, {\n            placement: placementToPopper(placement),\n            modifiers: modifiers,\n            onCreate: function (initial) { return _this._popperState = initial; },\n            onUpdate: function (update) { return _this._popperState = update; }\n        });\n    }\n    Object.defineProperty(PositioningService.prototype, \"placement\", {\n        get: function () {\n            return this._placement;\n        },\n        set: function (placement) {\n            this._placement = placement;\n            this._popper.options.placement = placementToPopper(placement);\n            this.update();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PositioningService.prototype, \"actualPlacement\", {\n        get: function () {\n            if (!this._popperState) {\n                return PositioningPlacement.Auto;\n            }\n            return popperToPlacement(this._popperState.placement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PositioningService.prototype, \"state\", {\n        get: function () {\n            return this._popperState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PositioningService.prototype.update = function () {\n        this._popper.update();\n    };\n    PositioningService.prototype.destroy = function () {\n        this._popper.destroy();\n    };\n    return PositioningService;\n}());\nexport { PositioningService };\n//# sourceMappingURL=positioning.service.js.map\n",null]}