{"remainingRequest":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/modules/datepicker/classes/date-parser.js","dependencies":[{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/modules/datepicker/classes/date-parser.js","mtime":1596454950000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/cache-loader/dist/cjs.js","mtime":1596454942000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1596454940000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { DateFnsParser } from \"../helpers/date-fns\";\nvar DateParser = /** @class */ /*@__PURE__*/ (function () {\n    function DateParser(format, locale) {\n        this._format = format;\n        this._parser = new DateFnsParser(locale);\n    }\n    DateParser.prototype.format = function (date) {\n        return this._parser.format(date, this._format);\n    };\n    DateParser.prototype.parse = function (dateString, baseDate) {\n        if (baseDate === void 0) {\n            baseDate = new Date();\n        }\n        return this._parser.parse(dateString, this._format, baseDate);\n    };\n    return DateParser;\n}());\nexport { DateParser };\nvar InternalDateParser = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(InternalDateParser, _super);\n    function InternalDateParser(mode, locale) {\n        var _this = this;\n        var internalFormats = {\n            time: \"HH:mm\",\n            datetime: \"YYYY-MM-DDTHH:mm\",\n            date: \"YYYY-MM-DD\",\n            month: \"YYYY-MM\",\n            year: \"YYYY\"\n        };\n        _this = _super.call(this, internalFormats[mode], locale) || this;\n        return _this;\n    }\n    return InternalDateParser;\n}(DateParser));\nexport { InternalDateParser };\n//# sourceMappingURL=date-parser.js.map\n",null]}