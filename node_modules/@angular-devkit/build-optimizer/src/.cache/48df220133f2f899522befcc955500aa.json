{"remainingRequest":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/modules/progress/components/progress.js","dependencies":[{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-semantic-ui/dist/modules/progress/components/progress.js","mtime":1596454950000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/cache-loader/dist/cjs.js","mtime":1596454942000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1596454940000}],"contextDependencies":[],"result":["import { Component, Input, HostBinding } from \"@angular/core\";\nvar SuiProgress = /** @class */ /*@__PURE__*/ (function () {\n    function SuiProgress() {\n        this._popupClasses = true;\n        this.value = 0;\n        this.maximum = 100;\n        this.precision = 0;\n        this._overrideSuccess = false;\n        this.autoSuccess = true;\n        this.showProgress = true;\n        this._popupClasses = true;\n    }\n    Object.defineProperty(SuiProgress.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            // Convert value from string to number where necessary.\n            var converted = +value;\n            if (Number.isNaN(converted)) {\n                return;\n            }\n            this._value = converted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiProgress.prototype, \"maximum\", {\n        get: function () {\n            return this._maximum;\n        },\n        set: function (value) {\n            // Convert value from string to number where necessary.\n            var converted = +value;\n            if (Number.isNaN(converted)) {\n                return;\n            }\n            this._maximum = converted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiProgress.prototype, \"precision\", {\n        get: function () {\n            return this._precision;\n        },\n        set: function (value) {\n            // Convert value from string to number where necessary.\n            var converted = +value;\n            if (Number.isNaN(converted)) {\n                return;\n            }\n            this._precision = Math.min(Math.max(converted, 0), 20);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiProgress.prototype, \"_reachedMaximum\", {\n        get: function () {\n            return this._overrideSuccess || ((this.value >= this.maximum) && this.autoSuccess);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiProgress.prototype, \"percentage\", {\n        get: function () {\n            var boundedValue = Math.min(Math.max(this.value, 0), this.maximum);\n            var percentage = (boundedValue / this.maximum) * 100;\n            return percentage.toFixed(this.precision);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiProgress.prototype, \"classValue\", {\n        set: function (classes) {\n            if (classes.includes(\"attached\") || classes.includes(\"tiny\")) {\n                this.showProgress = false;\n            }\n            if (classes.includes(\"success\")) {\n                this._overrideSuccess = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SuiProgress;\n}());\nexport { SuiProgress };\n//# sourceMappingURL=progress.js.map\n",null]}