{"remainingRequest":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-pdf-viewer/ng2-pdf-viewer.es5.js","dependencies":[{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/ng2-pdf-viewer/ng2-pdf-viewer.es5.js","mtime":1596454940000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/cache-loader/dist/cjs.js","mtime":1596454942000},{"path":"/home/vishwvir/company_projects/tata/web/ui_propensity/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1596454940000}],"contextDependencies":[],"result":["import { Component, ElementRef, EventEmitter, HostListener, Input, NgModule, Output } from '@angular/core';\n/**\n * @param {?} pdfJsViewer\n * @return {?}\n */\nfunction _createEventBus(pdfJsViewer) {\n    var /** @type {?} */ globalEventBus = new pdfJsViewer.EventBus(true);\n    attachDOMEventsToEventBus(globalEventBus);\n    return globalEventBus;\n}\n/**\n * @param {?} eventBus\n * @return {?}\n */\nfunction attachDOMEventsToEventBus(eventBus) {\n    eventBus.on('documentload', function () {\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('documentload', true, true, {});\n        window.dispatchEvent(event);\n    });\n    eventBus.on('pagerendered', function (evt) {\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('pagerendered', true, true, {\n            pageNumber: evt.pageNumber,\n            cssTransform: evt.cssTransform,\n        });\n        evt.source.div.dispatchEvent(event);\n    });\n    eventBus.on('textlayerrendered', function (evt) {\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('textlayerrendered', true, true, {\n            pageNumber: evt.pageNumber,\n        });\n        evt.source.textLayerDiv.dispatchEvent(event);\n    });\n    eventBus.on('pagechange', function (evt) {\n        var /** @type {?} */ event = document.createEvent('UIEvents');\n        event.initUIEvent('pagechange', true, true, window, 0);\n        event['pageNumber'] = evt.pageNumber;\n        evt.source.container.dispatchEvent(event);\n    });\n    eventBus.on('pagesinit', function (evt) {\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('pagesinit', true, true, null);\n        evt.source.container.dispatchEvent(event);\n    });\n    eventBus.on('pagesloaded', function (evt) {\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('pagesloaded', true, true, {\n            pagesCount: evt.pagesCount,\n        });\n        evt.source.container.dispatchEvent(event);\n    });\n    eventBus.on('scalechange', function (evt) {\n        var /** @type {?} */ event = document.createEvent('UIEvents');\n        event.initUIEvent('scalechange', true, true, window, 0);\n        event['scale'] = evt.scale;\n        event['presetValue'] = evt.presetValue;\n        evt.source.container.dispatchEvent(event);\n    });\n    eventBus.on('updateviewarea', function (evt) {\n        var /** @type {?} */ event = document.createEvent('UIEvents');\n        event.initUIEvent('updateviewarea', true, true, window, 0);\n        event['location'] = evt.location;\n        evt.source.container.dispatchEvent(event);\n    });\n    eventBus.on('find', function (evt) {\n        if (evt.source === window) {\n            return; // event comes from FirefoxCom, no need to replicate\n        }\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('find' + evt.type, true, true, {\n            query: evt.query,\n            phraseSearch: evt.phraseSearch,\n            caseSensitive: evt.caseSensitive,\n            highlightAll: evt.highlightAll,\n            findPrevious: evt.findPrevious,\n        });\n        window.dispatchEvent(event);\n    });\n    eventBus.on('attachmentsloaded', function (evt) {\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('attachmentsloaded', true, true, {\n            attachmentsCount: evt.attachmentsCount,\n        });\n        evt.source.container.dispatchEvent(event);\n    });\n    eventBus.on('sidebarviewchanged', function (evt) {\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('sidebarviewchanged', true, true, {\n            view: evt.view,\n        });\n        evt.source.outerContainer.dispatchEvent(event);\n    });\n    eventBus.on('pagemode', function (evt) {\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('pagemode', true, true, {\n            mode: evt.mode,\n        });\n        evt.source.pdfViewer.container.dispatchEvent(event);\n    });\n    eventBus.on('namedaction', function (evt) {\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('namedaction', true, true, {\n            action: evt.action,\n        });\n        evt.source.pdfViewer.container.dispatchEvent(event);\n    });\n    eventBus.on('presentationmodechanged', function (evt) {\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('presentationmodechanged', true, true, {\n            active: evt.active,\n            switchInProgress: evt.switchInProgress,\n        });\n        window.dispatchEvent(event);\n    });\n    eventBus.on('outlineloaded', function (evt) {\n        var /** @type {?} */ event = document.createEvent('CustomEvent');\n        event.initCustomEvent('outlineloaded', true, true, {\n            outlineCount: evt.outlineCount,\n        });\n        evt.source.container.dispatchEvent(event);\n    });\n}\nvar createEventBus = _createEventBus;\n/**\n * Created by vadimdez on 21/06/16.\n */\nvar PDFJS;\nvar PDFJSViewer;\n/**\n * @return {?}\n */\nfunction isSSR() {\n    return typeof window === 'undefined';\n}\nif (!isSSR()) {\n    PDFJS = require('pdfjs-dist/build/pdf');\n    PDFJSViewer = require('pdfjs-dist/web/pdf_viewer');\n    PDFJS.verbosity = PDFJS.VerbosityLevel.ERRORS;\n}\nvar RenderTextMode = /*@__PURE__*/ (function () {\n    var RenderTextMode = {};\n    RenderTextMode.DISABLED = 0;\n    RenderTextMode.ENABLED = 1;\n    RenderTextMode.ENHANCED = 2;\n    RenderTextMode[RenderTextMode.DISABLED] = \"DISABLED\";\n    RenderTextMode[RenderTextMode.ENABLED] = \"ENABLED\";\n    RenderTextMode[RenderTextMode.ENHANCED] = \"ENHANCED\";\n    return RenderTextMode;\n}());\nvar PdfViewerComponent = /** @class */ /*@__PURE__*/ (function () {\n    /**\n     * @param {?} element\n     */\n    function PdfViewerComponent(element) {\n        this.element = element;\n        this._cMapsUrl = typeof PDFJS !== 'undefined' ? \"https://unpkg.com/pdfjs-dist@\" + ((PDFJS)).version + \"/cmaps/\" : null;\n        this._renderText = true;\n        this._renderTextMode = RenderTextMode.ENABLED;\n        this._stickToPage = false;\n        this._originalSize = true;\n        this._page = 1;\n        this._zoom = 1;\n        this._rotation = 0;\n        this._showAll = true;\n        this._canAutoResize = true;\n        this._fitToPage = false;\n        this._externalLinkTarget = 'blank';\n        this.afterLoadComplete = new EventEmitter();\n        this.pageRendered = new EventEmitter();\n        this.textLayerRendered = new EventEmitter();\n        this.onError = new EventEmitter();\n        this.onProgress = new EventEmitter();\n        this.pageChange = new EventEmitter(true);\n        if (isSSR()) {\n            return;\n        }\n        var pdfWorkerSrc;\n        if (window.hasOwnProperty('pdfWorkerSrc') && typeof window.pdfWorkerSrc === 'string' && window.pdfWorkerSrc) {\n            pdfWorkerSrc = window.pdfWorkerSrc;\n        }\n        else {\n            pdfWorkerSrc = \"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/\" + PDFJS.version + \"/pdf.worker.min.js\";\n        }\n        PDFJS.GlobalWorkerOptions.workerSrc = pdfWorkerSrc;\n    }\n    Object.defineProperty(PdfViewerComponent.prototype, \"cMapsUrl\", {\n        /**\n         * @param {?} cMapsUrl\n         * @return {?}\n         */\n        set: function (cMapsUrl) {\n            this._cMapsUrl = cMapsUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"page\", {\n        /**\n         * @param {?} _page\n         * @return {?}\n         */\n        set: function (_page) {\n            _page = parseInt(_page, 10) || 1;\n            if (this._pdf) {\n                _page = this.getValidPageNumber(_page);\n            }\n            this._page = _page;\n            this.pageChange.emit(_page);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"renderText\", {\n        /**\n         * @param {?} renderText\n         * @return {?}\n         */\n        set: function (renderText) {\n            this._renderText = renderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"renderTextMode\", {\n        /**\n         * @param {?} renderTextMode\n         * @return {?}\n         */\n        set: function (renderTextMode) {\n            this._renderTextMode = renderTextMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"originalSize\", {\n        /**\n         * @param {?} originalSize\n         * @return {?}\n         */\n        set: function (originalSize) {\n            this._originalSize = originalSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"showAll\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._showAll = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"stickToPage\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._stickToPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"zoom\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._zoom;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (value <= 0) {\n                return;\n            }\n            this._zoom = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"rotation\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (!(typeof value === 'number' && value % 90 === 0)) {\n                console.warn('Invalid pages rotation angle.');\n                return;\n            }\n            this._rotation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"externalLinkTarget\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._externalLinkTarget = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"autoresize\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._canAutoResize = Boolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"fitToPage\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._fitToPage = Boolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PdfViewerComponent.getLinkTarget = function (type) {\n        switch (type) {\n            case 'blank':\n                return ((PDFJS)).LinkTarget.BLANK;\n            case 'none':\n                return ((PDFJS)).LinkTarget.NONE;\n            case 'self':\n                return ((PDFJS)).LinkTarget.SELF;\n            case 'parent':\n                return ((PDFJS)).LinkTarget.PARENT;\n            case 'top':\n                return ((PDFJS)).LinkTarget.TOP;\n        }\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PdfViewerComponent.setExternalLinkTarget = function (type) {\n        var /** @type {?} */ linkTarget = PdfViewerComponent.getLinkTarget(type);\n        if (linkTarget !== null) {\n            ((PDFJS)).externalLinkTarget = linkTarget;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.ngOnInit = function () {\n        if (!isSSR()) {\n            this.setupMultiPageViewer();\n            this.setupSinglePageViewer();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.ngOnDestroy = function () {\n        if (this._pdf) {\n            this._pdf.destroy();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.onPageResize = function () {\n        var _this = this;\n        if (!this._canAutoResize || !this._pdf) {\n            return;\n        }\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n        }\n        this.resizeTimeout = setTimeout(function () {\n            _this.updateSize();\n        }, 100);\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.onPageRendered = function (e) {\n        this.pageRendered.emit(e);\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.onTextLayerRendered = function (e) {\n        this.textLayerRendered.emit(e);\n    };\n    Object.defineProperty(PdfViewerComponent.prototype, \"pdfLinkService\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._showAll ? this.pdfMultiPageLinkService : this.pdfSinglePageLinkService;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"pdfViewer\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.getCurrentViewer();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"pdfFindController\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._showAll ? this.pdfMultiPageFindController : this.pdfSinglePageFindController;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.ngOnChanges = function (changes) {\n        if (isSSR()) {\n            return;\n        }\n        if ('src' in changes) {\n            this.loadPDF();\n        }\n        else if (this._pdf) {\n            if ('renderText' in changes) {\n                this.getCurrentViewer().textLayerMode = this._renderText ? this._renderTextMode : RenderTextMode.DISABLED;\n                this.resetPdfDocument();\n            }\n            else if ('showAll' in changes) {\n                this.resetPdfDocument();\n            }\n            if ('page' in changes) {\n                // New form of page changing: The viewer will now jump to the specified page when it is changed.\n                // This behavior is introducedby using the PDFSinglePageViewer\n                this.getCurrentViewer().scrollPageIntoView({ pageNumber: this._page });\n            }\n            this.update();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.updateSize = function () {\n        var _this = this;\n        var /** @type {?} */ currentViewer = this.getCurrentViewer();\n        this._pdf.getPage(currentViewer.currentPageNumber).then(function (page) {\n            var /** @type {?} */ viewport = page.getViewport(_this._zoom, _this._rotation);\n            var /** @type {?} */ scale = _this._zoom;\n            var /** @type {?} */ stickToPage = true;\n            // Scale the document when it shouldn't be in original size or doesn't fit into the viewport\n            if (!_this._originalSize || (_this._fitToPage && viewport.width > _this.element.nativeElement.offsetWidth)) {\n                scale = _this.getScale(page.getViewport(1).width);\n                stickToPage = !_this._stickToPage;\n            }\n            currentViewer._setScale(scale, stickToPage);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.setupMultiPageViewer = function () {\n        ((PDFJS)).disableTextLayer = !this._renderText;\n        PdfViewerComponent.setExternalLinkTarget(this._externalLinkTarget);\n        this.pdfMultiPageLinkService = new PDFJSViewer.PDFLinkService();\n        var /** @type {?} */ pdfOptions = {\n            eventBus: createEventBus(PDFJSViewer),\n            container: this.element.nativeElement.querySelector('div'),\n            removePageBorders: true,\n            linkService: this.pdfMultiPageLinkService,\n            textLayerMode: this._renderText ? this._renderTextMode : RenderTextMode.DISABLED\n        };\n        this.pdfMultiPageViewer = new PDFJSViewer.PDFViewer(pdfOptions);\n        this.pdfMultiPageLinkService.setViewer(this.pdfMultiPageViewer);\n        this.pdfMultiPageFindController = new PDFJSViewer.PDFFindController({ pdfViewer: this.pdfMultiPageViewer });\n        this.pdfMultiPageViewer.setFindController(this.pdfMultiPageFindController);\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.setupSinglePageViewer = function () {\n        ((PDFJS)).disableTextLayer = !this._renderText;\n        PdfViewerComponent.setExternalLinkTarget(this._externalLinkTarget);\n        this.pdfSinglePageLinkService = new PDFJSViewer.PDFLinkService();\n        var /** @type {?} */ pdfOptions = {\n            eventBus: createEventBus(PDFJSViewer),\n            container: this.element.nativeElement.querySelector('div'),\n            removePageBorders: true,\n            linkService: this.pdfSinglePageLinkService,\n            textLayerMode: this._renderText ? this._renderTextMode : RenderTextMode.DISABLED\n        };\n        this.pdfSinglePageViewer = new PDFJSViewer.PDFSinglePageViewer(pdfOptions);\n        this.pdfSinglePageLinkService.setViewer(this.pdfSinglePageViewer);\n        this.pdfSinglePageFindController = new PDFJSViewer.PDFFindController({ pdfViewer: this.pdfSinglePageViewer });\n        this.pdfSinglePageViewer.setFindController(this.pdfSinglePageFindController);\n    };\n    /**\n     * @param {?} page\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.getValidPageNumber = function (page) {\n        if (page < 1) {\n            return 1;\n        }\n        if (page > this._pdf.numPages) {\n            return this._pdf.numPages;\n        }\n        return page;\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.getDocumentParams = function () {\n        var /** @type {?} */ srcType = typeof (this.src);\n        if (!this._cMapsUrl) {\n            return this.src;\n        }\n        var /** @type {?} */ params = {\n            cMapUrl: this._cMapsUrl,\n            cMapPacked: true\n        };\n        if (srcType === 'string') {\n            params.url = this.src;\n        }\n        else if (srcType === 'object') {\n            if (((this.src)).byteLength !== undefined) {\n                params.data = this.src;\n            }\n            else {\n                Object.assign(params, this.src);\n            }\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.loadPDF = function () {\n        var _this = this;\n        if (!this.src) {\n            return;\n        }\n        if (this.lastLoaded === this.src) {\n            this.update();\n            return;\n        }\n        var /** @type {?} */ loadingTask = ((PDFJS)).getDocument(this.getDocumentParams());\n        loadingTask.onProgress = function (progressData) {\n            _this.onProgress.emit(progressData);\n        };\n        var /** @type {?} */ src = this.src;\n        ((loadingTask.promise))\n            .then(function (pdf) {\n            if (_this._pdf) {\n                _this._pdf.destroy();\n            }\n            _this._pdf = pdf;\n            _this.lastLoaded = src;\n            _this.afterLoadComplete.emit(pdf);\n            if (!_this.pdfMultiPageViewer) {\n                _this.setupMultiPageViewer();\n                _this.setupSinglePageViewer();\n            }\n            _this.resetPdfDocument();\n            _this.update();\n        }, function (error) {\n            _this.onError.emit(error);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.update = function () {\n        this.page = this._page;\n        this.render();\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.render = function () {\n        var _this = this;\n        this._page = this.getValidPageNumber(this._page);\n        var /** @type {?} */ currentViewer = this.getCurrentViewer();\n        if (this._rotation !== 0 || currentViewer.pagesRotation !== this._rotation) {\n            setTimeout(function () {\n                currentViewer.pagesRotation = _this._rotation;\n            });\n        }\n        if (this._stickToPage) {\n            setTimeout(function () {\n                currentViewer.currentPageNumber = _this._page;\n            });\n        }\n        this.updateSize();\n    };\n    /**\n     * @param {?} viewportWidth\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.getScale = function (viewportWidth) {\n        var /** @type {?} */ offsetWidth = this.element.nativeElement.offsetWidth;\n        if (offsetWidth === 0) {\n            return 1;\n        }\n        return this._zoom * (offsetWidth / viewportWidth) / PdfViewerComponent.CSS_UNITS;\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.getCurrentViewer = function () {\n        return this._showAll ? this.pdfMultiPageViewer : this.pdfSinglePageViewer;\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.resetPdfDocument = function () {\n        this.pdfFindController.reset();\n        if (this._showAll) {\n            this.pdfSinglePageViewer.setDocument(null);\n            this.pdfSinglePageLinkService.setDocument(null);\n            this.pdfMultiPageViewer.setDocument(this._pdf);\n            this.pdfMultiPageLinkService.setDocument(this._pdf, null);\n        }\n        else {\n            this.pdfMultiPageViewer.setDocument(null);\n            this.pdfMultiPageLinkService.setDocument(null);\n            this.pdfSinglePageViewer.setDocument(this._pdf);\n            this.pdfSinglePageLinkService.setDocument(this._pdf, null);\n        }\n    };\n    PdfViewerComponent.CSS_UNITS = 96.0 / 72.0;\n    return PdfViewerComponent;\n}());\n/**\n * Created by vadimdez on 01/11/2016.\n */\nvar PdfViewerModule = /** @class */ /*@__PURE__*/ (function () {\n    function PdfViewerModule() {\n    }\n    return PdfViewerModule;\n}());\n/**\n * Generated bundle index. Do not edit.\n */\nexport { PdfViewerModule, RenderTextMode, PdfViewerComponent };\n//# sourceMappingURL=ng2-pdf-viewer.es5.js.map\n",null]}